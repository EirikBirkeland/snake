{"version":3,"sources":["lib/constants.js","lib/Paddle.js","lib/Ball.js","lib/Score.js","lib/Border.js","lib/Board.js","index.js"],"names":["CANVAS_WIDTH","CANVAS_HEIGHT","CANVAS_PADDING","BOARD_OUTLINE_THICKNESS","BOARD_START_X","BOARD_START_Y","PADDLE_SPEED","PADDLE_HEIGHT","PADDLE_WIDTH","BALL_RADIUS","BALL_DIAMETER","LEVEL_PADDING","CONSTANTS","Paddle","ctx","side","X","Y","width","height","center","previousY","direction","Boolean","Math","round","random","clearRect","fillStyle","fillRect","debug","beginPath","closePath","fill","Ball","color","previousX","increment","changedRecently","directionX","isTouchingTop","isTouchingBottom","arc","PI","Score","scoreLeft","scoreRight","textX","str","length","font","fillText","Border","restore","Board","window","canvas","document","createElement","id","getElementById","appendChild","getContext","downArrowKeyIsDepressed","upArrowKeyIsDepressed","wKeyIsDepressed","sKeyIsDepressed","addEventListener","e","preventDefault","which","paddleLeft","paddleRight","ball","score","border","init","restart","setTimeout","requestAnimationFrame","gameLoop","clear","highestScore","incrementRight","render","incrementLeft","BORDER_TOP_EDGE","BORDER_BOTTOM_EDGE","moveUp","moveDown","console","info","prepareNextMovement"],"mappings":"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","file":"pong.4474bfb0.map","sourceRoot":"..","sourcesContent":["export const CANVAS_WIDTH = 800;\nexport const CANVAS_HEIGHT = 500;\nexport const CANVAS_PADDING = 20;\n\nexport const BOARD_OUTLINE_THICKNESS = 20;\nexport const BOARD_START_X = BOARD_OUTLINE_THICKNESS;\nexport const BOARD_START_Y = BOARD_OUTLINE_THICKNESS;\n\nexport const PADDLE_SPEED = 5;\nexport const PADDLE_HEIGHT = 80;\nexport const PADDLE_WIDTH = 20;\n\nexport const BALL_RADIUS = 5;\nexport const BALL_DIAMETER = BALL_RADIUS * 2;\nexport const LEVEL_PADDING = 3;","import * as CONSTANTS from './constants';\nconst { CANVAS_WIDTH, CANVAS_HEIGHT, PADDLE_HEIGHT, PADDLE_SPEED } = CONSTANTS;\n\nexport default class Paddle {\n    constructor(ctx, side) {\n        this.ctx = ctx;\n        this.side = side;\n        this.X = this.side === \"left\" ? 20 : CANVAS_WIDTH - 20;\n        this.Y = CANVAS_HEIGHT / 2;\n        this.width = 20;\n        this.height = PADDLE_HEIGHT;\n        this.center = {\n            X: () => this.X + (this.width / 2),\n            Y: () => this.Y + (this.height / 2),\n        }\n\n        this.previousY = null;\n        this.direction = Boolean(Math.round(Math.random())) ? \"up\" : \"down\";\n    }\n\n    moveUp() {\n        this.previousY = this.Y;\n        this.Y -= PADDLE_SPEED;\n    }\n\n    moveDown() {\n        this.previousY = this.Y;\n        this.Y += PADDLE_SPEED;\n    }\n\n    clean() {\n        this.ctx.clearRect(this.X, this.previousY, this.width, this.height);\n    }\n\n    render() {\n        if (this.Y >= CANVAS_HEIGHT) {\n            this.direction = \"up\";\n        } else if (this.Y <= 0) {\n            this.direction = \"down\";\n        }\n\n        this.ctx.fillStyle = \"rgb(0,200,0)\";\n        this.ctx.fillRect(this.X, this.Y, this.width, this.height);\n\n        if (debug) {\n            this.ctx.beginPath();\n            this.ctx.fillStyle = \"red\";\n            this.ctx.fillRect(this.center.X(), this.center.Y(), 3, 3);\n            this.ctx.closePath();\n            this.ctx.fill();\n        }\n    }\n}","import * as CONSTANTS from './constants';\nconst { CANVAS_WIDTH, CANVAS_HEIGHT, BOARD_START_Y, BALL_RADIUS, BALL_DIAMETER } = CONSTANTS;\n\nexport default class Ball {\n    constructor(ctx, { color }) {\n        this.ctx = ctx;\n        this.X = CANVAS_WIDTH / 2;\n        this.Y = CANVAS_HEIGHT / 2;\n        this.previousX = null;\n        this.previousY = null;\n        this.increment = 2;\n        this.color = color;\n        this.direction = {\n            X: \"left\",\n            Y: \"up\",\n        }\n        this.changedRecently = false;\n    }\n\n    prepareNextMovement(directionX) {\n        if (this.changedRecently) {\n            --this.changedRecently;\n        }\n\n        if (directionX && !this.changedRecently) {\n            this.direction.X = directionX;\n            this.changedRecently = 5;\n        };\n\n        if (this.isTouchingTop) {\n            this.direction.Y = \"down\";\n        } else if (this.isTouchingBottom) {\n            this.direction.Y = \"up\";\n        }\n\n        this.previousX = this.X;\n        if (this.direction.X === \"left\") {\n            this.X -= this.increment;\n        } else if (this.direction.X === \"right\") {\n            this.X += this.increment;\n        }\n\n        this.previousY = this.Y;\n        if (this.direction.Y === \"up\") {\n            this.Y -= this.increment;\n        } else if (this.direction.Y === \"down\") {\n            this.Y += this.increment;\n        }\n    }\n    \n    get isTouchingTop () {\n        return this.Y <= BOARD_START_Y + BALL_RADIUS\n    }\n\n    get isTouchingBottom () {\n        return this.Y >= CANVAS_HEIGHT - BOARD_START_Y - BALL_RADIUS\n    }\n    \n    render() {\n        this.ctx.beginPath();\n        this.ctx.fillStyle = this.color;\n        this.ctx.arc(this.X, this.Y, BALL_DIAMETER, 0, 2 * Math.PI, false);\n        this.ctx.closePath();\n        this.ctx.fill();\n\n        if (debug) {\n            this.ctx.beginPath();\n            this.ctx.fillStyle = \"red\";\n            this.ctx.fillRect(this.X, this.Y, 3, 3);\n            this.ctx.closePath();\n            this.ctx.fill();\n        }\n\n    }\n}","import * as CONSTANTS from './constants';\nconst { CANVAS_WIDTH, CANVAS_PADDING } = CONSTANTS;\n\nexport default class Score {\n    constructor(ctx) {\n        this.ctx = ctx;\n        this.scoreLeft = 0;\n        this.scoreRight = 0;\n    }\n    incrementLeft() {\n        this.scoreLeft += 1;\n    }\n    incrementRight() {\n        this.scoreRight += 1;\n    }\n    get highestScore() {\n        return this.scoreLeft > this.scoreRight ? this.scoreLeft : this.scoreRight;\n    }\n    clean() {\n        this.ctx.clearRect(textX - 100, CANVAS_PADDING, str.length * 40, 30);\n    }\n    render() {\n        const str = this.scoreLeft + \" - \" + this.scoreRight;\n        const textX = CANVAS_WIDTH / 2 - str.length / 2 * 15;\n        this.ctx.font = \"30px Arial\";\n        this.ctx.fillStyle = \"white\";\n        this.ctx.fillText(str, textX, CANVAS_PADDING + 25);\n    }\n}","import * as CONSTANTS from './constants';\nconst { CANVAS_WIDTH, CANVAS_HEIGHT, BOARD_OUTLINE_THICKNESS } = CONSTANTS;\n\nexport default class Border {\n    constructor(ctx) {\n        this.ctx = ctx;\n     }\n    clean() {\n        this.ctx.clearRect(this.X, this.previousY, 20, PADDLE_HEIGHT);\n    }\n    render() {\n        this.ctx.fillStyle = \"rgb(255,255,255)\";\n        this.ctx.fillRect(0, 0, CANVAS_WIDTH, BOARD_OUTLINE_THICKNESS);\n        this.ctx.fillRect(0, CANVAS_HEIGHT - BOARD_OUTLINE_THICKNESS, CANVAS_WIDTH, BOARD_OUTLINE_THICKNESS);\n        this.ctx.restore();\n    }\n}","import * as CONSTANTS from './constants';\nconst { CANVAS_WIDTH, CANVAS_HEIGHT } = CONSTANTS;\n\nexport default class Board {\n    static clear(ctx) {\n        ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    }\n}","import * as CONSTANTS from './lib/constants';\nconst { CANVAS_WIDTH, CANVAS_HEIGHT, LEVEL_PADDING, BALL_RADIUS, BOARD_OUTLINE_THICKNESS } = CONSTANTS;\n\nimport Paddle from './lib/Paddle';\nimport Ball from './lib/Ball';\nimport Score from './lib/Score';\nimport Border from './lib/Border';\nimport Board from './lib/Board';\n\nwindow.debug = false;\n\nconst canvas = document.createElement('canvas');\ncanvas.width = CANVAS_WIDTH;\ncanvas.height = CANVAS_HEIGHT;\ncanvas.id = \"myCanvas\";\ndocument.getElementById('root').appendChild(canvas);\nconst ctx = canvas.getContext(\"2d\");\n\nlet downArrowKeyIsDepressed;\nlet upArrowKeyIsDepressed;\nlet wKeyIsDepressed;\nlet sKeyIsDepressed;\n\nwindow.addEventListener(\"keydown\", e => {\n    e.preventDefault();\n    downArrowKeyIsDepressed = e.which === 40;\n    upArrowKeyIsDepressed = e.which === 38;\n});\n\nwindow.addEventListener(\"keyup\", e => {\n    e.preventDefault();\n    downArrowKeyIsDepressed = !e.which === 40;\n    upArrowKeyIsDepressed = !e.which === 38;\n});\n\nwindow.addEventListener(\"keydown\", e => {\n    e.preventDefault();\n    wKeyIsDepressed = e.which === 87;\n    sKeyIsDepressed = e.which === 83;\n});\n\nwindow.addEventListener(\"keyup\", e => {\n    e.preventDefault();\n    wKeyIsDepressed = !e.which === 87;\n    sKeyIsDepressed = !e.which === 83;\n});\n\nlet paddleLeft;\nlet paddleRight;\nlet ball;\nlet score;\nlet border;\n\nfunction init() {\n    paddleLeft = new Paddle(ctx, \"left\", true);\n    paddleRight = new Paddle(ctx, \"right\", false);\n    ball = new Ball(ctx, { color: \"white\" });\n    score = new Score(ctx);\n    border = new Border(ctx);\n}\n\nfunction restart() {\n    ball = null;\n    ball = new Ball(ctx, { color: \"white\" });\n    setTimeout(() => requestAnimationFrame(gameLoop));\n}\n\nfunction gameLoop() {\n    Board.clear(ctx);\n\n    if (score.highestScore >= 10) {\n        return;\n    }\n\n    if (ball.X <= LEVEL_PADDING + BALL_RADIUS) {\n        score.incrementRight();\n        score.render();\n        return restart();\n    } else if (ball.X >= CANVAS_WIDTH - LEVEL_PADDING - BALL_RADIUS) {\n        score.incrementLeft();\n        score.render();\n        return restart();\n    }\n\n    const BORDER_TOP_EDGE = BOARD_OUTLINE_THICKNESS + 5;\n    const BORDER_BOTTOM_EDGE = CANVAS_HEIGHT - 105;\n    \n    if (wKeyIsDepressed && paddleLeft.Y > BORDER_TOP_EDGE) {\n        paddleLeft.moveUp();\n    } else if (sKeyIsDepressed && paddleLeft.Y < BORDER_BOTTOM_EDGE) {\n        paddleLeft.moveDown();\n    } else if (upArrowKeyIsDepressed && paddleRight.Y > BORDER_TOP_EDGE) {\n        paddleRight.moveUp();\n    } else if (downArrowKeyIsDepressed && paddleRight.Y < BORDER_BOTTOM_EDGE) {\n        paddleRight.moveDown();\n    }\n\n    paddleLeft.render();\n    paddleRight.render();\n    border.render();\n\n    if (\n        (ball.X <= paddleLeft.X + 30 &&\n            ball.Y >= paddleLeft.center.Y() - (paddleLeft.height/2) &&\n            ball.Y <= paddleLeft.center.Y() + (paddleLeft.height/2)) ||\n        (ball.X >= paddleRight.X - 15 &&\n            ball.Y <= paddleRight.center.Y() + paddleRight.height/2 &&\n            ball.Y >= paddleRight.center.Y() - paddleRight.height/2)\n    ) {\n        console.info(\"smack!\");\n        ball.prepareNextMovement(ball.direction.X === \"left\" ? \"right\" : \"left\");\n    } else {\n        ball.prepareNextMovement();\n    }\n    score.render();\n    ball.render();\n\n    requestAnimationFrame(gameLoop);\n}\n\ninit();\ngameLoop();"]}